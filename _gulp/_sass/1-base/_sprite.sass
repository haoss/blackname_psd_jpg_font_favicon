// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$icon-comment-2-name: 'icon-comment-2'
$icon-comment-2-x: 0px
$icon-comment-2-y: 13px
$icon-comment-2-offset-x: 0px
$icon-comment-2-offset-y: -13px
$icon-comment-2-width: 14px
$icon-comment-2-height: 14px
$icon-comment-2-total-width: 14px
$icon-comment-2-total-height: 56px
$icon-comment-2-image: 'sprite.png'
$icon-comment-2: (0px, 13px, 0px, -13px, 14px, 14px, 14px, 56px, 'sprite.png', 'icon-comment-2', )
$icon-comment-name: 'icon-comment'
$icon-comment-x: 0px
$icon-comment-y: 27px
$icon-comment-offset-x: 0px
$icon-comment-offset-y: -27px
$icon-comment-width: 14px
$icon-comment-height: 14px
$icon-comment-total-width: 14px
$icon-comment-total-height: 56px
$icon-comment-image: 'sprite.png'
$icon-comment: (0px, 27px, 0px, -27px, 14px, 14px, 14px, 56px, 'sprite.png', 'icon-comment', )
$icon-download-name: 'icon-download'
$icon-download-x: 0px
$icon-download-y: 0px
$icon-download-offset-x: 0px
$icon-download-offset-y: 0px
$icon-download-width: 11px
$icon-download-height: 13px
$icon-download-total-width: 14px
$icon-download-total-height: 56px
$icon-download-image: 'sprite.png'
$icon-download: (0px, 0px, 0px, 0px, 11px, 13px, 14px, 56px, 'sprite.png', 'icon-download', )
$icon-search-name: 'icon-search'
$icon-search-x: 0px
$icon-search-y: 41px
$icon-search-offset-x: 0px
$icon-search-offset-y: -41px
$icon-search-width: 13px
$icon-search-height: 15px
$icon-search-total-width: 14px
$icon-search-total-height: 56px
$icon-search-image: 'sprite.png'
$icon-search: (0px, 41px, 0px, -41px, 13px, 15px, 14px, 56px, 'sprite.png', 'icon-search', )
$spritesheet-width: 14px
$spritesheet-height: 56px
$spritesheet-image: 'sprite.png'
$spritesheet-sprites: ($icon-comment-2, $icon-comment, $icon-download, $icon-search, )
$spritesheet: (14px, 56px, 'sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(../img/#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
